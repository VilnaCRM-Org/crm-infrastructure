version: 0.2

env:
  variables:
    ACCOUNT_ID: $ACCOUNT_ID
    ENVIRONMENT: $ENVIRONMENT
    TEST_REPORTS_BUCKET: $TEST_REPORTS_BUCKET
    LHCI_REPORTS_BUCKET: $LHCI_REPORTS_BUCKET
    CRM_GIT_REPOSITORY_LINK: $CRM_GIT_REPOSITORY_LINK

phases:
  install:
    commands:
      - ". ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/install_packages.sh"
      - ". ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/crm_installation.sh"
      - ". ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/setup_docker.sh"
      - npm install -g pnpm@8.15.5 @lhci/cli@0.14.0

  build:
    commands:
      - cd ${CODEBUILD_SRC_DIR}/crm
      - echo "🔧 Configuring Docker Compose files for user-defined network and port exposure..."
      - |
        # Ensure docker-compose.test.yml exposes port 3001 and uses app-net
        if ! grep -q 'app-net' docker-compose.test.yml; then
          echo 'networks:\n  app-net:\n    driver: bridge' >> docker-compose.test.yml
        fi
        if ! grep -q 'ports:' docker-compose.test.yml; then
          sed -i '/^  prod:/a\    ports:\n      - "3001:3001"' docker-compose.test.yml
        fi
        if ! grep -q 'networks:' docker-compose.test.yml; then
          sed -i '/^  prod:/a\    networks:\n      - app-net' docker-compose.test.yml
        fi
      - echo "🚀 Starting production services on user-defined network..."
      - docker compose -f common-healthchecks.yml -f docker-compose.test.yml up -d
      - echo "⏳ Waiting for prod service to be ready on port 3001..."
      - npx wait-on http://localhost:3001
      - echo "🧪 Verifying application accessibility from host..."
      - curl -I http://localhost:3001
      - echo "🔦 Running Lighthouse Desktop audit from build environment..."
      - pnpm lhci autorun --config=lighthouserc.desktop.js
    finally:
      - echo "📊 Generating test reports"
      - ". ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/run_reports.sh"

artifacts:
  files:
    - "crm/lhci-reports-desktop/**/*"
